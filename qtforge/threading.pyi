"""
QtForge Threading Module Type Stubs

This module provides threading utilities and thread management for plugins.
"""

from typing import Dict, List, Any, Optional, Callable
from enum import Enum

class ThreadPriority(Enum):
    """Thread priority enumeration."""
    IdlePriority = ...
    LowestPriority = ...
    LowPriority = ...
    NormalPriority = ...
    HighPriority = ...
    HighestPriority = ...
    TimeCriticalPriority = ...
    InheritPriority = ...

class ThreadState(Enum):
    """Thread state enumeration."""
    NotRunning = ...
    Running = ...
    Finished = ...

# Threading utility functions
def get_thread_count() -> int: ...
def current_thread_id() -> str: ...
def is_main_thread() -> bool: ...
def sleep(milliseconds: int) -> None: ...

# Thread pool management
class ThreadPool:
    """Thread pool for plugin operations."""
    def __init__(self, max_threads: int = 0) -> None: ...
    def submit(self, task: Callable[[], Any]) -> Any: ...
    def wait_for_done(self, timeout_ms: int = -1) -> bool: ...
    def active_thread_count(self) -> int: ...
    def max_thread_count(self) -> int: ...
    def set_max_thread_count(self, max_threads: int) -> None: ...

# Factory functions
def create_thread_pool(max_threads: int = 0) -> ThreadPool: ...
